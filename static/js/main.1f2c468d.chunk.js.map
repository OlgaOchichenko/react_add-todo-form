{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","claccNames","TodoList","todos","map","info","getUser","userId","usersFromServer","find","defaultTodos","App","useState","setTitle","setUserId","setTodos","isTitleError","setIsTitleEror","isUserError","setIsUserEror","action","method","onSubmit","event","preventDefault","length","Math","max","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f2c468d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport claccNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    user,\n    title,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={claccNames(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      { user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(info => (\n      <TodoInfo todo={info} key={info.id} />\n    ))}\n  </section>\n\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst defaultTodos: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUser(todo.userId),\n  }\n));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(defaultTodos);\n  const [completed] = useState(false);\n  const [isTitleError, setIsTitleEror] = useState(false);\n  const [isUserError, setIsUserEror] = useState(false);\n\n  const createdTodo = () => {\n    return {\n      id: Math.max(0, ...todos.map(({ id }) => id + 1)),\n      title,\n      completed,\n      userId,\n      user: getUser(userId) || null,\n    };\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setIsTitleEror(true);\n    }\n\n    if (userId === 0) {\n      setIsUserEror(true);\n    }\n\n    if (isTitleError || isUserError) {\n      return;\n    }\n\n    if (title.length > 0 && userId !== 0) {\n      setTitle('');\n      setUserId(0);\n      setTodos([...todos, createdTodo()]);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setIsTitleEror(false);\n              }}\n            />\n            { isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(Number(event.target.value));\n                setIsUserEror(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id}>{user.name}</option>))}\n            </select>\n\n            { isUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n\n          >\n            Add\n          </button>\n        </form>\n\n        <section className=\"TodoList\">\n          <TodoList todos={todos} />\n\n        </section>\n      </div>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}